#include <Arduino.h>
#ifdef ESP8266
#include <ESP8266WiFi.h>
#else
#include <WiFi.h>
#endif
#include "WifiWhirl_Version.h"
#define DEVICE_NAME "wifiwhirl"

/*
 * Network Settings
 */
bool enableWmApFallback = true;
/** get the name for the WiFi configuration manager access point */
const char *wmApName = DEVICE_NAME;
/** get the password for the WiFi configuration manager (min. 8, max. 63 chars; NULL to disable) */
const char *wmApPassword = "wifiwhirl";
/** get the network hostname of the device (max. length 26) */
const char *netHostname = DEVICE_NAME;

/*
 * OTA Service Credentials
 */
/** get the name for the OTA service */
const char *OTAName = DEVICE_NAME;
/** get the password for the OTA service  */
const char *OTAPassword = "wifiwhirl";
const char *update_path = "/update";

/*
 * WifiWhirl Cloud Settings
 */
/** Cloud API URL */
const char *cloudApi = "";
/** Cloud API URL */
// >>> import secrets
// >>> secrets.token_hex(32)
const char *cloudApiKey PROGMEM = ""; // 32-bit Hex
/** Cloud API SSL Certificate */
const char *x509CA PROGMEM = "";

/*
 * Web UI Configuration
 *
 * You can modify this via Web UI.
 */
/** get or set the state of displaying the "Temperature" section */
bool showSectionTemperature = false;
/** get or set the state of displaying the "Display" section */
bool showSectionDisplay = true;
/** get or set the state of displaying the "Control" section */
bool showSectionControl = true;
/** get or set the state of displaying the "Buttons" section */
bool showSectionButtons = true;
/** get or set the state of displaying the "Timer" section */
bool showSectionTimer = true;
/** get or set the state of displaying the "Totals" section */
bool showSectionTotals = true;
/** get or set the state of displaying slider or selector */
bool useControlSelector = false;
/** get the state of password visibility */
const bool hidePasswords = true;

/*
 * Home Assistant Settings
 */
#define HA_PREFIX "homeassistant"

/*
 * Prometheus Settings
 */
#define PROM_NAMESPACE "layzspa"

/*
 * MQTT Server
 *
 * You can modify this via Web UI.
 */
/** get or set the state of the MQTT server connection */
bool useMqtt = false;
/** get or set the MQTT server IP address */
IPAddress mqttIpAddress(192, 168, 0, 20);
/** get or set the MQTT server port */
int mqttPort = 1883;
/** get or set the MQTT server username */
String mqttUsername = "Benutzername";
/** get or set the MQTT server password */
String mqttPassword = "Passwort";
/** get or set the unique MQTT client ID */
String mqttClientId = DEVICE_NAME;
/** get or set the MQTT topic name */
String mqttBaseTopic = DEVICE_NAME;
/** get or set the MQTT telemetry interval */
int mqttTelemetryInterval = 600;
